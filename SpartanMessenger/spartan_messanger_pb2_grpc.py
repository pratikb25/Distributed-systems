# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import spartan_messanger_pb2 as proto_dot_spartan__messanger__pb2


class SpartanMessangerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ReceiveMsg = channel.unary_stream(
        '/grpc.SpartanMessanger/ReceiveMsg',
        request_serializer=proto_dot_spartan__messanger__pb2.Message.SerializeToString,
        response_deserializer=proto_dot_spartan__messanger__pb2.Message.FromString,
        )
    self.SendMsg = channel.unary_unary(
        '/grpc.SpartanMessanger/SendMsg',
        request_serializer=proto_dot_spartan__messanger__pb2.Message.SerializeToString,
        response_deserializer=proto_dot_spartan__messanger__pb2.Empty.FromString,
        )
    self.Connect = channel.unary_unary(
        '/grpc.SpartanMessanger/Connect',
        request_serializer=proto_dot_spartan__messanger__pb2.Users.SerializeToString,
        response_deserializer=proto_dot_spartan__messanger__pb2.Status.FromString,
        )


class SpartanMessangerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def ReceiveMsg(self, request, context):
    """Response-streaming RPC
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendMsg(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Connect(self, request, context):
    """Connection RPC to establish who's talking to whom
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SpartanMessangerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ReceiveMsg': grpc.unary_stream_rpc_method_handler(
          servicer.ReceiveMsg,
          request_deserializer=proto_dot_spartan__messanger__pb2.Message.FromString,
          response_serializer=proto_dot_spartan__messanger__pb2.Message.SerializeToString,
      ),
      'SendMsg': grpc.unary_unary_rpc_method_handler(
          servicer.SendMsg,
          request_deserializer=proto_dot_spartan__messanger__pb2.Message.FromString,
          response_serializer=proto_dot_spartan__messanger__pb2.Empty.SerializeToString,
      ),
      'Connect': grpc.unary_unary_rpc_method_handler(
          servicer.Connect,
          request_deserializer=proto_dot_spartan__messanger__pb2.Users.FromString,
          response_serializer=proto_dot_spartan__messanger__pb2.Status.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc.SpartanMessanger', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
